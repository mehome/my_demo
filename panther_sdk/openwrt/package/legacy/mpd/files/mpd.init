#!/bin/sh /etc/rc.common
# Copyright (C) 2007-2011 OpenWrt.org

START=93

RALIST=/etc/ralist
OCONF=/etc/mpd.conf
CONF=/tmp/mpd.conf
MPDPID="/var/mpd.pid"
BR0PID="/var/run/upmpdcli.br0"
BR1PID="/var/run/upmpdcli.br1"
PATTERN="_%6x"

setup_codec () {
	rule=`echo $1 | 
	awk '{
	for(i=1;i<=NF;i++){
		if($i=="card"){card=$(i+1)}
		else if($i=="device"){device=$(i+1)}
	} output="card="card";device="device; gsub(/:/,"",output); print output}'`
	eval $rule
#	sed -i '/alsa/,/oss/{s/#*\tdevice.*/\tdevice\t\t"plughw:'"${card}"','"${device}"'"/g}' ${CONF}
#	sed -i '/alsa/,/oss/{s/#*\tmixer_type.*/\tmixer_type\t\t"software"/g}' ${CONF}
}

check_codec () {
	local info=`aplay -l`
	rule=`echo ${info} | grep 'ES9023\|USB Audio'`
	#check audio codec, otherwise to use default
	if echo ${info} | grep 'card 0.*tas5711' > /dev/null; then
		sed -i '/alsa/,/oss/{s/.*mixer_control.*/\tmixer_control\t"Master"/g}' ${CONF}
	elif [ -n "${rule}" ]; then
		setup_codec "${rule}"
	fi
}

add_ralists () {
	local fralists=/tmp/ralists
	local fraurls=/tmp/raurls
	ls -1 /playlists/ | sort -n | sed -e '/audioPlayList/d' -e '/^mmcblk[0-9].$/d' -e '/^sd[a-z].[0-9].$/d' > ${fralists}
	awk '{print "\"/playlists/"$0"\""}' /tmp/ralists | xargs awk '{print $0}' > /tmp/raurls
	awk 'BEGIN{i=0;j=0} NR==FNR{a[i]=$0;i=i+1} NR>FNR{FS="-";b[j]=$1;sub(/[0-9]*-/,"",$0);sub(/.m3u/,"",$0);print $0"&"a[j]"&"b[j];j=j+1}' ${fraurls} ${fralists} > ${RALIST}
	rm -f ${fraurls} ${fralists}
}

start() {
	config_get ra_vol ra_vol
	config_get ra_func ra_func
	config_get ra_name ra_name
	config_get op_work_mode op_work_mode

	[ "${ra_func}" == 0 ] && exit

	ifconfig lo up
	#create mpd directories
	pld=`grep ^playlist_directory ${OCONF} | cut -d "\"" -f 2 | sed "s/~/\/root/g"`
	if [ ! -d $pld ]; then
		mkdir -m 0755 -p $pld
	fi

	cp ${OCONF} ${CONF}
	check_codec

	#if [ -x /bin/nice ]; then
		# This has real-time constraints, so let's at least tell the OS
		# that this should have higher priority to avoid skipping
		# when doing other things in the background.
		#nice -n -10
	#fi
	#nice -n -10 mpdaemon --stdout --stderr ${CONF}

	nice -n -10 mpdaemon ${CONF}

	mpc volume $ra_vol > /dev/null
	
	[ -z `pidof monitor` ] && monitor &
	
	nametmp=${ra_name%"${PATTERN}"}
	[ ${nametmp} != ${ra_name} ] && {
		ra_name="${nametmp}_"`cat /tmp/.bootvars | awk -F: '/mac0/{print $4 $5 $6}'`
		config_set ra_name ${ra_name}
	}
	
	[ $ra_func == 4 -o $ra_func == 2 ] &&	
	if ! pidof upmpdcli > /dev/null; then
		[ -x /usr/bin/upmpdcli ] && {
			if [ ${op_work_mode} = 9 ]; then
				/usr/bin/upmpdcli -f "${ra_name}" -i br1 -D
			elif [ ${op_work_mode} = 3 ]; then
#				/usr/bin/upmpdcli -f "${ra_name}" -i br0 -D 
				/usr/bin/upmpdcli -f "${ra_name}" -i br1 -D
			else
				/usr/bin/upmpdcli -f "${ra_name}" -i br0 -D 
			fi
		}
	fi
	config_set mpd_nocheck 0

	[ -f $RALIST ] || add_ralists 
	
#	prepare for auto play.
#	state=`mpc play_status`
#	[ $state != 2 ] && {
#		[ $ra_func = 1 -o $ra_func = 3 ] && {
#
#		}
#	}

}

stop() {
	config_set mpd_nocheck 1
	[ -x /lib/wdk/pandora ] && {
		/lib/wdk/pandora stop
		/lib/wdk/pandora shutdown
	}
	[ -f ${MPDPID} ] && {
		pid=`cat ${MPDPID}`
		kill $pid
		#rm ${MPDPID}
	}
	[ -f ${BR0PID} ] && {
		pid=`cat ${BR0PID}`
		kill -9 $pid
		rm ${BR0PID}
	}
	[ -f ${BR1PID} ] && {
		pid=`cat ${BR1PID}`
		kill -9 $pid
		rm ${BR1PID}
	}
	return 0
}

reload() {
	start
	
	config_get ra_func ra_func
	if [ $ra_func = 2 ]; then
		[ ! -f "/playlists/CurList.m3u" ] && exit
		config_get mpd_lastplay mpd_lastplay

		mpc load CurList.m3u
		mpc play $mpd_lastplay
	fi
}

