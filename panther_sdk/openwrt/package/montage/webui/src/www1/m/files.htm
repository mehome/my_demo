<!DOCTYPE html>
<html>

<head>
 <title>Panther(Mobile Version)</title>
 <meta http-equiv="cache-control" content="no-cache">
 <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
 <meta content="width=device-width, height= device-height, initial-scale=1, maximum-scale=4, user-scalable=yes" name="viewport" />
 <link href="pics/homescreen.gif" rel="apple-touch-icon" />
 <link href="css/style.css" rel="stylesheet" media="screen" type="text/css" />
 <link href="css/demo2.css" rel="stylesheet" media="screen" type="text/css" />
 <script type="text/javascript" src="javascript/common.js"></script>
 <script type="text/javascript" src="javascript/wdk.js"></script>
 <script type="text/javascript" src="javascript/product.js"></script>
 <script src="javascript/wrap_function.js"></script>
 <script type="text/javascript">
var DDIR = 0
var DSIZE = 1
var DNAME = 2
var DNUM = 3;
var UDISK_DIR = '/udisk';
var SPECIAL_CHAR_ARRAY = ["\\", "/", ":", "*", "?", '"', "<", ">", "|"];
var file_list;
var szpath;

function opendir(filename) {
	var target = decodeURI(filename);
	var s;

	if (target == '..') {
		var last = szpath.lastIndexOf('/', szpath.length - 2);
		s = szpath.substring(0, last + 1);
	} else if (target == '/') {
		s = target;
	} else {
		s = szpath + target + '/';
	}
	wdk.setCookie('szpath', s, 6);
	window.location.reload();
	return;
}

function get_file_list() {
	var files = wdk.cliCmd('stor ls ' + encodeURIComponent(szpath));

	file_list = files.split('/');

	if (file_list[file_list.length - 1] != "NoneDisk") {
		wdk.setCookie('szpath', '/', 6);
		window.location.reload();
	}

	if (szpath != '/') {
		file_list.splice(0, 3);
	}
	file_list.splice(file_list.length - 1, 1);
}

function download_file(filename) {
	var id = wdk.cliCmd('stor id');
	var file = decodeURI(filename);
	var target = encodeURI(window.location.protocol + '//' + window.location.host + UDISK_DIR + id + szpath + file);
	target = target.replace(/#/g, "%23");
	window.open(target);
}

function delete_file(filename) {
	var file = decodeURI(filename);
	if (confirm(wdk.msg("Are you sure to delete these files?")))
		wdk.cliCmd('stor rm ' + encodeURIComponent(szpath) + ' ' + encodeURIComponent(file));

	if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1)
		window.location.reload(true);
	else
		window.location.reload();
}

function show_file_operation(filename) {
	var content = "";

	content += "<div id=content>";
	content += "<ul class=pageitem><li class=button><input type=button value=Download onclick=download_file('" + filename + "')><" + "/li><" + "/ul>";
	content += "<ul class=pageitem><li class=button><input type=button value=Delete onclick=delete_file('" + filename + "')><" + "/li><" + "/ul>";
	content += "<ul class=pageitem><li class=button><input type=button value=Close onclick=wdk.hideResultBG()><" + "/li><" + "/ul>";
	content += "<" + "/div>"

	get_by_id("titleupwarng").innerHTML = content;
	wdk.showResultBG();
}

function get_file_size(bytes) {

	var i = -1;
	var byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];
	do {
		bytes = bytes / 1024;
		i++;
	} while (bytes > 1024);

	return Math.max(bytes, 0.1).toFixed(1) + byteUnits[i];
};

function set_files() {
	var content = "";
	var type;
	var name;
	var size;

	if (szpath != '/') {
		content += "<li class=menu>"
		content += "<a href=# onclick=opendir('/')><img src=images/folder.gif /><span class=name>Root directory<" + "/span><" + "/a>"
		content += "<" + "/li>"
		content += "<li class=menu>"
		content += "<a href=# onclick=opendir('..')><img src=images/folder.gif /><span class=name>Parent directory<" + "/span><" + "/a>"
		content += "<" + "/li>"
	}

	for (var i = 0; i < file_list.length; i += 3) {
		type = file_list[i];
		name = file_list[i + 2];
		size = file_list[i + 1];

		if (type == "0") {

			content += "<li class=menu>"
			content += "<a href=# onclick=show_file_operation(\"" + encodeURI(name) + "\")><img src=images/edit.gif /><span class=name>" + name + "<" + "/span><span class=comment>" + get_file_size(size) + "<" + "/span><span class=arrow><" + "/span><" + "/a>"
			content += "<" + "/li>"
		} else {
			content += "<li class=menu>"
			content += "<a href=# onclick=opendir(\"" + encodeURI(name) + "\")><img src=images/folder.gif /><span class=name>" + name + "<" + "/span><" + "/a>"
			content += "<" + "/li>"
		}
	}

	get_by_id("files").innerHTML = content;
}

function result_success() {
	wdk.hideResultBG();
	alert(wdk.msg("Upload files successfully!"));
	setTimeout(function() {
		if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1)
			window.location.reload(true);
		else
			window.location.reload();
	}, 300);
}

function result_fail() {
	wdk.hideResultBG();
	alert(wdk.msg("Failed to upload files"));
	if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1)
		window.location.reload(true);
	else
		window.location.reload();
}

function tigger_upload() {
	get_by_id("upload").click();
}

function check_filename(str, arr) {
	var i = arr.length;
	while (i--) {
		if (str.indexOf(arr[i]) >= 0) {
			return true;
		}
	}
	return false;
}

function upload_file() {
	var f = get_by_id("upload");

	if ('files' in f) {
		if (f.files.length == 0) {
			alert(wdk.msg("Please select the file to be uploaded!"));
			return;
		} else {
			for (var i = 0; i < f.files.length; i++) {
				var file = f.files[i];
				if ('name' in file) {
					var len = 0;
					var c = 0;

					//check length
					for (var x = 0; x < file.name.length; x++) {
						if (file.name.charCodeAt(x) > 255) {
							len += 9;
							c += 1;
						} else {
							len += 1;
						}
					}

					if ((len > 140 && c == 0) || (len > 360 && c > 0)) {
						alert(wdk.msg("File name is too long to be supported"));
						return;
					} else {
						if (check_filename(file.name, SPECIAL_CHAR_ARRAY)) {
							alert(wdk.msg("File names can not contain one of the following characters[/ , \\ , : , * , ? , \" , < , > , | , $ ]"));
							return;
						}
						get_by_id("filename").value = file.name;
						console.log(get_by_id("filename").value);
					}
				}
			}
		}
	}

	get_by_id("titleupwarng").innerHTML = wdk.msg("Uploading files. Current connected users please do not touch the management interface!");
	wdk.stopTimeout();
	wdk.showResultBG();

	var filepath = UDISK_DIR + szpath;
	get_by_id("form1").filepath.value = filepath.substr(0, filepath.length - 1);
	get_by_id("form1").submit();

	//add delay to avoid not yet submit
	setTimeout(function() {
		wdk.showUpgradeResult(0, result_success, result_fail,false);
	}, 1000);
}

function send_request() {}

function init() {
	szpath = wdk.getCookie('szpath');
	if (!szpath) {
		szpath = '/';
		wdk.setCookie('szpath', szpath, 6);
	}

	get_file_list();
	set_files();
}
 </script>
</head>

<body onload=init()>
 <div id="resultbg" style="display:none;" class="black_overlay">
  <div id="result" class="white_content">
   <img src="images/load.gif" alt="loading icon" />
   <div><font id="titleupwarng"></font>
   </div>
  </div>
 </div>

 <form id="form1" name="form1" method="post" action="../upgrade.cgi" encType="multipart/form-data" target="rframe">
  <div id="topbar">
   <div id="leftnav">
    <a href="index.htm">
     <img alt="home" src="images/back.gif" />
    </a>
   </div>
   <div id="title">File Explorer</div>
   <div id="rightbutton">
    <a href="#" onclick="tigger_upload()">
     <script>
show_words("Upload")
     </script>
    </a>
   </div>
  </div>

  <div id="content">
   <ul class="pageitem">
    <div id="files"></div>
   </ul>
  </div>
  <input type="hidden" id="filepath" name="filepath" value="/">
  <input type="hidden" id="filename" name="filename">
  <input type="hidden" id="filetype" name="filetype" value="2">
  <input type="hidden" id="fileid" name="fileid" value="0">
  <input id="upload" name="upload" type="file" onchange="upload_file()" style="visibility:hidden">
  <iframe id="rframe" name="rframe" style="visibility:hidden; display:none;"></iframe>
 </form>
</body>

</html>
