<!--ifdef CONFIG_SONIX_IMAGE-->
<!DOCTYPE html>
<html>

<head>
 <title>Extension</title>
 <meta http-equiv="cache-control" content="no-cache">
 <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
 <meta content="width=device-width, height= device-height, initial-scale=1, maximum-scale=4, user-scalable=yes" name="viewport" />
 <link href="pics/homescreen.gif" rel="apple-touch-icon" />
 <link href="css/style.css" rel="stylesheet" media="screen" type="text/css" />
 <link href="css/demo2.css" rel="stylesheet" media="screen" type="text/css" />
 <script type="text/javascript" src="javascript/common.js"></script>
 <script type="text/javascript" src="javascript/wdk.js"></script>
 <script type="text/javascript" src="javascript/wrap_function.js"></script>
 <script type="text/javascript">
wdk.cdbLoad(['$webcam_format', '$webcam_mirror', '$webcam_flip', '$webcam_h264_mode', '$webcam_h264_qp', '$webcam_h264_bitrate', '$webcam_h264_qlvl', '$webcam_mjpg_bitrate', '$webcam_mjpg_qlvl']);

function init() {
	var f = document.frm;
	var format = wdk.cdbVal('$webcam_format');
	var target_ip = window.location.hostname;
	var port = rule2var(format, "port");
	var prot = (rule2var(format, "prot") == "HTTP") ? "http" : "rtsp";
	var path = rule2var(format, "path");
	var vdev = rule2var(format, "vdev");
	var url = prot + "://" + target_ip + ":" + port + "/" + path;

	f.reset();
	wdk.init_form();
	wdk.getById("$webcam_h264_mode").onchange();

}

function send_request() {
	if (!chkNum(wdk.getById("$webcam_mjpg_bitrate"), 0, 4294967295, "MJPG Bitrate")) {
		highlight("$webcam_mjpg_bitrate");
		return;
	}
	if (!chkNum(wdk.getById("$webcam_h264_bitrate"), 0, 16777215, "H264 Bitrate")) {
		highlight("$webcam_h264_bitrate");
		return;
	}
	if (!chkNum(wdk.getById("$webcam_h264_qp"), 10, 51, "H264 Quantization Parameter")) {
		highlight("$webcam_h264_qp");
		return;
	}

	if (wdk.is_form_update()) {
		wdk.showResultBG();
		wdk.redirect(5);

		wdk.save_form(0, 1);

		if (wdk.cdbChg("$webcam_mirror")) {
			/*WSIM_BEGIN*/
			alert("webcam img_exctl mirror " + wdk.cdbVal("$webcam_mirror"));
			/*WSIM_END*/
			wdk.cliCmd("webcam img_exctl mirror " + wdk.cdbVal("$webcam_mirror"));
		}
		if (wdk.cdbChg("$webcam_flip")) {
			/*WSIM_BEGIN*/
			alert("webcam img_exctl flip " + wdk.cdbVal("$webcam_flip"));
			/*WSIM_END*/
			wdk.cliCmd("webcam img_exctl flip " + wdk.cdbVal("$webcam_flip"));
		}
		if (wdk.cdbChg("$webcam_h264_mode")) {
			/*WSIM_BEGIN*/
			alert("webcam img_exctl h264_mode " + wdk.cdbVal("$webcam_h264_mode"));
			/*WSIM_END*/
			wdk.cliCmd("webcam img_exctl h264_mode " + wdk.cdbVal("$webcam_h264_mode"));
		}
		if (wdk.cdbChg("$webcam_h264_qp")) {
			/*WSIM_BEGIN*/
			alert("webcam img_exctl h264_qp " + wdk.cdbVal("$webcam_h264_qp"));
			/*WSIM_END*/
			wdk.cliCmd("webcam img_exctl h264_qp " + wdk.cdbVal("$webcam_h264_qp"));
		}
		if (wdk.cdbChg("$webcam_h264_bitrate")) {
			/*WSIM_BEGIN*/
			alert("webcam img_exctl h264_bitrate " + wdk.cdbVal("$webcam_h264_bitrate"));
			/*WSIM_END*/
			wdk.cliCmd("webcam img_exctl h264_bitrate " + wdk.cdbVal("$webcam_h264_bitrate"));
		}
		if (wdk.cdbChg("$webcam_mjpg_bitrate")) {
			/*WSIM_BEGIN*/
			alert("webcam img_exctl mjpg_bitrate " + wdk.cdbVal("$webcam_mjpg_bitrate"));
			/*WSIM_END*/
			wdk.cliCmd("webcam img_exctl mjpg_bitrate " + wdk.cdbVal("$webcam_mjpg_bitrate"));
		}
	} else
		alert(wdk.msg('The settings are not changed!!'));


}

function modechange(m) {
	var qp = wdk.getById("$webcam_h264_qp");
	var br = wdk.getById("$webcam_h264_bitrate");
	if (m == 1) { //CBR
		qp.value = wdk.cdbVal("$webcam_h264_qp");
		updatebr(1, getSelectValue("$webcam_h264_qlvl"));
		showHide('br_div', 1);
		showHide('qp_div', 0);
	} else { //VBR
		br.value = wdk.cdbVal("$webcam_h264_bitrate");
		updatebr(1, getSelectValue("$webcam_h264_qlvl"));
		showHide('br_div', 0);
		showHide('qp_div', 1);
	}
}

function updatebr(t, ops) {
	var format = wdk.cdbVal('$webcam_format');
	var res = rule2var(format, "res");
	var fps = rule2var(format, "fps");
	var BFPS = 30;
	var MJBG_BR = [40000000, 25000000, 10000000];
	var H264_BR = [8000000, 4750000, 1500000];
	var H264_QP = [25, 32, 40];
	var res_div;
	if (ops == 255)
		return;
	if (res == "1920x1080")
		res_div = 1;
	else if (res == "1280x720")
		res_div = 2;
	else //640x480
		res_div = 6;
	if (t == 0) //mjpg
		wdk.getById("$webcam_mjpg_bitrate").value = Math.round(MJBG_BR[ops] / (BFPS / fps) / res_div);
	else { //h264
		if (getSelectValue("$webcam_h264_mode") == 1) //CBR
		{
			wdk.getById("$webcam_h264_bitrate").value = Math.round(H264_BR[ops] / (BFPS / fps) / res_div);
		} else //VBR
		{
			wdk.getById("$webcam_h264_qp").value = H264_QP[ops];
		}
	}
}
 </script>
</head>

<body onload=init()>


 <div id="resultbg" style="display:none;" class="black_overlay">
  <div id="result" class="white_content">
   <img src="images/load.gif" alt="loading icon" />
   <div><font id="titleupwarng"></font>
   </div>
  </div>
 </div>

 <div id="topbar">
  <div id="leftnav">
   <a href="webcamFunc.htm">
    <img alt="home" src="images/back.gif" />
   </a>
  </div>
  <div id="title">Extension</div>
  <div id="rightbutton">
   <a onclick="send_request()">
    <script>
show_words("Done")
    </script>
   </a>
  </div>
 </div>

 <form name="frm">
  <fieldset>
   <span class="graytitle"><script>get_words("Image")</script></span> 

   <ul class="pageitem">
    <li class="checkbox">
     <span class="name"><script>get_words("Mirror")</script></span>
     <input type="checkbox" id="$webcam_mirror">
    </li>

    <li class="checkbox">
     <span class="name"><script>get_words("Flip")</script></span>
     <input type="checkbox" id="$webcam_flip">
    </li>
   </ul>

   <span class="graytitle"><script>get_words("H264")</script></span>
   <ul class="pageitem">

    <li class="smallfield">
     <span class="name"><script>get_words("Mode")</script></span>
     <select id="$webcam_h264_mode" size="1" onchange="modechange(this.value)">
      <option value="1">CBR</option>
      <option value="2">VBR</option>
     </select>
    </li>

    <li class="smallfield">
     <span class="name"><script>get_words("Quality")</script></span>
     <select id="$webcam_h264_qlvl" size="1" onchange="updatebr(1, this.value)">
      <option value="0">High</option>
      <option value="1">Middle</option>
      <option value="2">Low</option>
      <option value="255">Custom</option>
     </select>
    </li>

    <li class="smallfield">
     <div class="leftname">
      <script>
get_words("Quantization Parameter") + get_words(" 10-51")
      </script>
     </div>
     <input type="text" id="$webcam_h264_qp" onchange="setSelectValue('$webcam_h264_qlvl','255')">
    </li>

    <div id="br_div">
     <li class="smallfield">
      <div class="leftname">
       <script>
get_words("Bitrate") + get_words(" 0~16777215")
       </script>
      </div>
      <input type="text" id="$webcam_h264_bitrate" onchange="setSelectValue('$webcam_h264_qlvl','255')">
     </li>
    </div>

   </ul>

   <span class="graytitle"><script>get_words("MJPG")</script></span>
   <ul class="pageitem">

    <li class="smallfield">
     <span class="name"><script>get_words("Quality")</script></span>
     <select id="$webcam_mjpg_qlvl" size="1" onchange="updatebr(0, this.value)">
      <option value="0">High</option>
      <option value="1">Middle</option>
      <option value="2">Low</option>
      <option value="255">Custom</option>
     </select>
    </li>

    <li class="smallfield">
     <div class="leftname">
      <script>
get_words("Bitrate") + get_words(" 0~4294967295")
      </script>
     </div>
     <input type="text" id="$webcam_mjpg_bitrate" onchange="setSelectValue('$webcam_mjpg_qlvl','255')">
    </li>

   </ul>
  </fieldset>
 </form>
</body>

</html>
<!--endif-->
