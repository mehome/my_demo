<!--ifdef CONFIG_FILE_EXPLORER-->
<!DOCTYPE HTML>
<HTML>

<head>
 <title>Panther</title>
 <META http-equiv=Content-Type content='text/html; charset=utf-8'>
 <SCRIPT src=common.js></SCRIPT>
 <SCRIPT src=wdk.js></SCRIPT>
 <SCRIPT src=product.js></SCRIPT>

 <!-- js -->
 <script type="text/javascript">
var show_success = 300;
var DDIR = 0
var DSIZE = 1
var DNAME = 2
var DNUM = 3;
var UDISK_DIR = '/udisk';

var SPECIAL_CHAR_ARRAY = ["\\", "/", ":", "*", "?", '"', "<", ">", "|"];

var PHOTO_LASTNAME_ARRAY = ["jpg", "jpeg", "gif", "bmp", "png", "cdr", "psd"];
var VIDEO_LASTNAME_ARRAY = ["mp4", "rm", "ram", "rmvb", "avi", "mpg", "3gp", "mov", "wmv", "wkv", "asf", "m4v"];
var MUSIC_LASTNAME_ARRAY = ["m3u", "mp3", "wma", "mid", "vma", "wav", "wave", "ac3", "acc", "au", "mmf", "ogg", "ram", "rm", "wax", "wvx", "aac", "amr", "awb", "cd", "flac"];

var otherExtensionName = [];

var browse_type = 0; //0. all; 1. music; 2: video; 3: photo;
var fileslist;
var isdisk = 0; //Set isdisk 0 temporarily.
var idlist = "";
var pixlist = "";
var UDISK_DIR = '/udisk';

var szpath = wdk.getCookie('szpath');
if (!szpath) {
	szpath = '/';
	wdk.setCookie('szpath', szpath, 6);
}

function setBroweType() {
	var tmpstr = window.location.toString();
	var index2 = tmpstr.indexOf('?');
	if (index2 == -1) { //read all files
		browse_type = 0;
	} else {
		var sztype = tmpstr.substring(index2);
		if (sztype.indexOf("music") > 0)
			browse_type = 1;
		else if (sztype.indexOf("video") > 0)
			browse_type = 2;
		else if (sztype.indexOf("photo") > 0)
			browse_type = 3;
		else
			browse_type = 0;
	}
}

function strcontains(str, arr) {
	var i = arr.length;
	while (i--) {
		if (str.indexOf(arr[i]) >= 0) return true;
	}
	return false;
}

function contains(arr, value) {
	var i = arr.length;
	while (i--) {
		if (arr[i] === value) return true;
	}
	return false;
}

function openbmpfile(szid) {
	var str_url = window.location.protocol + '//' + window.location.host + '/media/showpic.htm?' + szid;
	/*
        if (navigator.appVersion.indexOf("Android")!=-1 )
                parent.document.location.href=str_url;
                //window.open (str_url, "photo", "toolbar=yes, menubar=yes, scrollbars=yes, resizable=yes, location=yes, status=yes");
        else
        */
	window.open(str_url);
}

var select_all = false;

function selectall() {
	if (!confirm(wdk.msg(select_all ? "Deselect All" : "Select All")))
		return;
	select_all = !select_all;
	var checkctrl = document.getElementsByName("filelist");
	for (var i = 0; i < checkctrl.length; i++)
		checkctrl[i].checked = select_all;
	return;
}

function deletedir() {
	var str_file_list = "";
	var match = false;

	var checkctrl = document.getElementsByName("filelist");
	for (var i = 0; i < checkctrl.length; i++) {
		if (checkctrl[i].checked) {
			str_file_list += checkctrl[i].value.toString();
			str_file_list += "/";
			match = true;
		} else
			continue;
	}
	if (match) {
		if (confirm(wdk.msg("Are you sure to delete these files?")))
			wdk.cliCmd('stor rm ' + encodeURIComponent(szpath) + ' ' + encodeURIComponent(str_file_list));
	} else
		alert(wdk.msg("Please select the file to be deleted!"));
	//clear all checked
	window.location.reload(true);
}

var warning_obj;

function result_success() {
	warning_obj = wdk.getById("titleupwarng");
	warning_obj.innerHTML = wdk.msg("Upload files successfully!");
	document.frm.files.value = "";
	setTimeout(function() {
		if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1)
			window.location.reload(true);
		else
			window.location.reload();
	}, show_success);
}

function result_fail() {
	var m = wdk.msg("Failed to upload files");
	m += '<input class=button name=apply value=' + wdk.msg("Reload") + ' type=button onclick="window.location.reload()">'
	wdk.getById('result').innerHTML = m;
}

function uploadFileCheck() {
	var str_value = document.frm.files.value.toString();
	var thislist = fileslist.split("/");
	var i = DDIR;

	//check the same name iteratelly.
	while (thislist[i] != "" && thislist[i] != "NoneDisk") {
		if (thislist[i + DNAME] == str_value) {
			var tmpfname = confirm(wdk.msg("Overwrite this file, are you sure?"));
			if (tmpfname == true) {} else return;
		}
		i += DNUM;
	}
	//If the str_value is an empty string, it means that no file is selected.
	if (str_value == "") {
		alert(wdk.msg("Please select the file to be uploaded!"));
		return;
	} else {
		var index1 = str_value.lastIndexOf('\\');
		var strfileName = str_value.substr(index1 + 1);
		var len = 0;
		var c = 0;
		//check length
		for (var a = 0; a < strfileName.length; a++) {
			if (strfileName.charCodeAt(a) > 255) {
				len += 9;
				c += 1;
			} else
				len += 1;
		}
		if ((len > 140 && c == 0) || (len > 360 && c > 0)) {
			alert(wdk.msg("File name is too long to be supported"));
			return;
		}

		//check special characters
		if (strcontains(strfileName, SPECIAL_CHAR_ARRAY)) {
			alert(wdk.msg("File names can not contain one of the following characters[/ , \\ , : , * , ? , \" , < , > , | , $ ]"));
			return;
		}
	}
	//document.frm.files.disabled = true;//if disable it, file wouldn't be submitted
	document.frm.but_upload.disabled = true;
	document.frm.but_del.disabled = true;
	document.frm.but_sel.disabled = true;
	document.frm.filename.value = strfileName;
	wdk.stopTimeout();
	wdk.showResultBG();
	uploadFile();
	return;
}

function uploadFile() {
	//filepath=[file path]
	//filetype=2
	//filename=[file name]
	//files=[file content]
	//fileid=0
	var filepath = UDISK_DIR + szpath;
	document.frm.filepath.value = filepath.substr(0, filepath.length - 1);
	var f = document.frm;
	f.submit();
	//add delay to avoid not yet submit
	setTimeout(function() {
		wdk.showUpgradeResult(0, result_success, result_fail, false);
	}, 1000);
}

function opendir(target) {
	var s;
	//alert("opendir: "+target);
	if (target == '..') {
		var last = szpath.lastIndexOf('/', szpath.length - 2);
		s = szpath.substring(0, last + 1);
	} else if (target == '/')
		s = target;
	else
		s = szpath + target + '/';
	wdk.setCookie('szpath', s, 6);
	window.location.reload();
	return;
}

function getfile(e, target) {
	var stor_id = wdk.cliCmd('stor id');
	var real_target = encodeURI(window.location.protocol + '//' + window.location.host + UDISK_DIR + stor_id + szpath + target);
	real_target = real_target.replace(/#/g, "%23");
	e.setAttribute('href', real_target);
}

/**
 * This method is aim to put the DOM ele's name using wdk.msg() function so that different lang can be displayed.
 *  Code segment 1 is responsible for setting the title: files_manage || music_share...
 *  Code segment 2 is to set the push buttons' responsive msg to the users.
 */
function initTranslation() {
	//segment1:
	var e;
	e = wdk.getById("titleupwarng");
	e.innerHTML = wdk.msg("files upload warn");

	e = wdk.getById("files_manage");
	if (browse_type == 0)
		e.innerHTML = wdk.msg("Files Management");
	else if (browse_type == 1)
		e.innerHTML = wdk.msg("music share");
	else if (browse_type == 2)
		e.innerHTML = wdk.msg("media share");
	else if (browse_type == 3)
		e.innerHTML = wdk.msg("pic share");
	//Edit the "File Management" CSS style.
	e.style.fontSize = "16px";
	e.style.fontWeight = "bolder";
	e.style.lineHeight = 3;

	//segment2:
	if (isdisk == 0) {
		if (browse_type == 0) {
			e = wdk.getById("files_seletion");
			e.innerHTML = wdk.msg("Selection");
		}
		e = wdk.getById("files_type");
		e.innerHTML = wdk.msg("Type");
		e = wdk.getById("files_name");
		e.innerHTML = wdk.msg("Name");
		e = wdk.getById("files_size");
		e.innerHTML = wdk.msg("Size") + " (" + wdk.msg("bytes") + ")";

		e = wdk.getById("uploaded");
		e.value = wdk.msg("Upload files");
		e = wdk.getById("delete");
		e.value = wdk.msg("Delete files");
		e = wdk.getById("select");
		e.value = wdk.msg("Select all");
		e = wdk.getById("back_up");
		e.innerHTML = wdk.msg("Parent directory"); //back strup
		e = wdk.getById("back_home");
		e.innerHTML = wdk.msg("Root directory"); //back strhome
	} else {
		e = wdk.getById("files_diskicon");
		e.innerHTML = wdk.msg("files disk icon");
		e = wdk.getById("files_diskname");
		e.innerHTML = wdk.msg("files disk name");
	}

}
/**
 * Write file's information on table lists.
 */
var fileExtensionArr = [];
var fileTypeArr = [];

var max = 30;
var listnum = 0;
var filelistArr;
fileslist = wdk.cliCmd('stor ls ' + encodeURIComponent(szpath)); //Load stor value.

function createlistArr() {
	filelistArr = fileslist.split('/');
	// return to root directory at wrong path case
	if (filelistArr[filelistArr.length - 1] != "NoneDisk") {
		wdk.setCookie('szpath', '/', 6);
		window.location.reload();
	}
	if (szpath != '/')
		filelistArr.splice(0, 3);
	filelistArr.splice(filelistArr.length - 1, 1);
}

function createFileListRow() {
	listnum = filelistArr.length / 3;
	refreshList('$file_list', listnum, listnum);
}

function fillFileListData() {
	var str = "";
	var n = 0;
	for (n = 0; n < filelistArr.length; n += 3) {
		str += "files_type" + "=" + filelistArr[n] + '&'; //th_ is added in fiill_form_entry.
		str += "files_size" + "=" + filelistArr[n + 1] + '&';
		str += "files_name" + "=" + filelistArr[n + 2];

		var tmpArr = filelistArr[(n + 2)].split(".");
		var ext = tmpArr[tmpArr.length - 1];
		if (typeof ext == 'undefined')
			ext = '';
		fileExtensionArr.push(ext); //wdk.getById('$file_list'+ 1).parentElement.remove(this);
		fileTypeArr.push(filelistArr[n]);

		wdk.getById("$file_list" + (n / 3 + 1)).getElementsByTagName("td")[0].getElementsByTagName("input")[0].setAttribute("value", filelistArr[n + 2]);

		//Write file information to each table row.
		wdk.fill_form_entry(wdk.getById("$file_list" + (n / 3 + 1)), str); //arg1: $file_list+ rowNumber, arg2: data str derived from cgi
		str = "";
	}

}

//Initialize the values.
function init() {
	setBroweType();
	createlistArr();
	createFileListRow();
	fillFileListData();

	//Set button value
	wdk.getById("uploaded").value = wdk.msg("Upload");
	wdk.getById("delete").value = wdk.msg("Delete");
	wdk.getById("select").value = wdk.msg("Select/Deselect All");

	//Set warning msg default value
	var e = wdk.getById("titleupwarng");
	e.innerHTML = wdk.msg("Uploading files. Current connected users please do not touch the management interface!");

	//In root directory, hide root & parent row
	if (szpath == '/') {
		wdk.getById("root").style.display = "none";
		wdk.getById("parent").style.display = "none";
	}

	//Initialize the index array.
	setExtensionFileNumber();
}

var fileExtensionIndArr = new Array();

/*
 * To give integers to represent various kinds of file type.
 */
function setExtensionFileNumber() {
	for (var i = 0; i < fileExtensionArr.length; i++) {
		var t = 0;
		var cmpTarget = fileExtensionArr[i];
		//Photo
		for (var j in PHOTO_LASTNAME_ARRAY) {
			if (cmpTarget == PHOTO_LASTNAME_ARRAY[j]) {
				t += 3;
				break;
			}
		}
		//audio:
		for (var k in MUSIC_LASTNAME_ARRAY) {
			if (cmpTarget == MUSIC_LASTNAME_ARRAY[k]) {
				t += 4;
				break;
			}
		}
		//video:
		for (var m in VIDEO_LASTNAME_ARRAY) {
			if (cmpTarget == VIDEO_LASTNAME_ARRAY[m]) {
				t += 5;
				break;
			}
		}
		if (cmpTarget == undefined) t += 6; //Without file extension name.

		if (t == 0) t += 7; //unchanged: undefined or unknown file extension name: x.doc

		fileExtensionIndArr.push(t);
	}

	//Dir:
	for (var n in fileTypeArr) {
		if (fileTypeArr[n] == 1) fileExtensionIndArr[n] = 1;
	}
}
/**
 * Add a hyperlink.
 */
var hyperlinkInd = 2;
var node;

function addHyperLink(td, value) {
	var fileName = filelistArr[hyperlinkInd];
	var fileType = filelistArr[hyperlinkInd - 2];
	node = td.getElementsByTagName('a')[0];

	if ('textContent' in document.body)
		node.textContent = fileName;
	else //IE8 and below
		node.innerText = fileName;

	if (fileType == 1) { //dir 
		node.onclick = function() {
			opendir(fileName);
			return false;
		}
	} else {
		node.setAttribute('target', '_blank');
		node.onclick = function() {
			getfile(this, fileName);
		}
	}

	hyperlinkInd += 3;
}
/**
 * As i is 1: directory, otherwise: file.
 */
function fileOrDir(td, i) {
	var selection = ["images/edit.gif", "images/folder.gif"];
	var img = (i == 0) ? selection[0] : selection[1];
	td.getElementsByTagName('img')[0].setAttribute("src", img);
}

/**
 * Rewrite the file infor to the table again.
 */
function refreshFileList() {
	createlistArr();
	wdk.getById("$file_list1").style.display = "table-row"; //Since set display to "none" will cause an exceptioin.
	createFileListRow();
	fillFileListData();
	hyperlinkInd = 2;
}

function showDifferentFiles(option) {
	var optionValue = option.value;
	var filterValue1 = 0;
	var filterValue2 = 0;
	hyperlinkInd = 2;
	refreshFileList();
	wdk.getById("$file_list1").style.display = "";
	switch (optionValue) {
		case "0":
			refreshFileList();
			return;
		case "1": //Show Img files.
			filterValue1 = 3;
			filterValue2 = 0;
			break;
		case "2": //Show audio files.
			filterValue1 = 4;
			filterValue2 = 9;
			break;
		case "3": //Show vedio files.
			filterValue1 = 5;
			filterValue2 = 9;
			break;

		default:
			console.log("Error");
			break;
	}

	for (var d = 0; d < fileExtensionIndArr.length; d++) {
		if (fileExtensionIndArr[d] != filterValue1 && fileExtensionIndArr[d] != filterValue2 && fileExtensionIndArr[d] != 1) {
			if (d == 0)
				wdk.getById("$file_list" + (d + 1)).style.display = "none";
			else {
				var ele = document.getElementById("$file_list" + (d + 1));
				ele.parentNode.removeChild(ele);
			}
		}
	}
}
 </script>
 <link rel=stylesheet type=text/css href=demo2.css>
</HEAD>

<body class=gui onload=init() onkeydown="(event.keyCode==13) ? 0 : 1">
 <script>
header()
 </script>
 <form name=frm action=upgrade.cgi method=post encType=multipart/form-data target="resp_frame">
  <fieldset>
   <legend id="files_manage">
    <script>
wdk.putmsg('Files Management');
    </script>
   </legend>
   <div id="fileExplorerHeader">
    <select id="shareFiles" onchange=showDifferentFiles(this.options[this.selectedIndex])>
     <option value=0>File Explorer</option>
     <option value=1>Photo Share</option>
     <option value=2>Music Share</option>
     <option value=3>Video Share</option>
    </select>
   </div>

   <!-- Table Template -->
   <table id="fileExplorerTb" style="width:100%;table-layout:fixed" class=infolist>
    <tr>
     <th id="th_files_seletion" style="width:13%">
      <script>
wdk.putmsg("Selection")
      </script>
     </th>
     <th id="th_files_type" style="width:7%">
      <script>
wdk.putmsg("Type")
      </script>
     </th>
     <th id="th_files_name" style="width:60%">
      <script>
wdk.putmsg("Name")
      </script>
     </th>
     <th id="th_files_size" style="width:20%">
      <script>
wdk.putmsg("Size (bytes)")
      </script>
     </th>
    </tr>
    <!--Root Dir-->
    <tr id="root">
     <td>
     </td>
     <td>
      <img src="images/folder.gif" alt="folder">
     </td>
     <td>
      <a id="back_home" href="files.htm" onclick="opendir('/')">
       <script>
wdk.putmsg("Root directory")
       </script>
      </a>
     </td>
     <td>
     </td>
    </tr>

    <!--Parent directory. -->
    <tr id="parent">
     <td>
     </td>
     <td>
      <img src="images/folder.gif" alt="folder">
     </td>
     <td>
      <a id="back_up" href="files.htm" onclick="opendir('..')">
       <script>
wdk.putmsg("Parent directory")
       </script>
      </a>
     </td>
     <td></td>
    </tr>
    <tr align=center id=$file_list1 style="visibility:visible; display:table-row ">
     <td headers="th_files_seletion" style>
      <input type=checkbox name="filelist" value="">
     </td>
     <td id="fileType" headers="th_files_type" load="fileOrDir">
      <img src="images/folder.gif" alt="folder">
     </td>
     <td headers="th_files_name" load="addHyperLink">
      <a href="javascript:void(0)"></a>
     </td>
     <td headers="th_files_size"></td>
    </tr>
   </table>
   <input type="hidden" name="filepath" value="/">
   <input type="hidden" name="filename">
   <input type="hidden" name="filetype" value=2>
   <input type="hidden" name="fileid" value=0>

   <div>
    <div style="float:left">
     <input type="file" name="files">
    </div>
    <div style="float:right">
     <input type="button" name="but_upload" value="Upload" id="uploaded" onclick="uploadFileCheck()">
     <input type="button" name="but_del" value="Delete" id="delete" onclick="deletedir()">
     <input type="button" name="but_sel" value="Select/Deselect All" id="select" onclick="selectall()">
    </div>
   </div>
   <iframe name="resp_frame" style="visibility:hidden;display:none;"></iframe>
  </fieldset>

  <script>
footer(1)
  </script>

 </form>
</body>

</html>
<!--endif-->
